"use strict";var P=Object.defineProperty;var G=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var J=Object.prototype.hasOwnProperty;var b=(n,u)=>{for(var p in u)P(n,p,{get:u[p],enumerable:!0})},X=(n,u,p,w)=>{if(u&&typeof u=="object"||typeof u=="function")for(let y of j(u))!J.call(n,y)&&y!==p&&P(n,y,{get:()=>u[y],enumerable:!(w=G(u,y))||w.enumerable});return n};var Z=n=>X(P({},"__esModule",{value:!0}),n);var ne={};b(ne,{handler:()=>ie});module.exports=Z(ne);var F=require("@aws-sdk/client-sns");var k=require("date-fns"),_=require("drizzle-orm");var ae=require("dotenv/config"),r=require("zod"),H=r.z.object({API_PORT:r.z.coerce.number(),NODE_ENV:r.z.enum(["development","production"]),JWT_SECRET:r.z.string(),JWT_EXPIRATION:r.z.coerce.number(),POSTGRES_USER:r.z.string(),POSTGRES_PASSWORD:r.z.string(),POSTGRES_DB:r.z.string(),DATABASE_URL:r.z.string(),DRIZZLE_KIT_DATABASE_URL:r.z.string(),PASSWORD_SALT_ROUNDS:r.z.coerce.number(),AWS_SQS_QUEUE_URL:r.z.string().url(),AWS_SQS_REGION:r.z.string(),AWS_SQS_ACCESS_KEY_ID:r.z.string(),AWS_SQS_SECRET_ACCESS_KEY:r.z.string(),AWS_SNS_ACCESS_KEY_ID:r.z.string(),AWS_SNS_SECRET_ACCESS_KEY:r.z.string(),AWS_SNS_REGION:r.z.string(),RESEND_API_KEY:r.z.string(),SMS_VERIFICATION_CODE_EXPIRES_IN:r.z.coerce.number(),EMAIL_VERIFICATION_CODE_EXPIRES_IN:r.z.coerce.number()}),h=Object.freeze(H.parse(process.env));var O=require("drizzle-orm/node-postgres");var U={};b(U,{notificationRelations:()=>ee,notificationStatusEnum:()=>D,notifications:()=>a,products:()=>i,productsRelations:()=>te,users:()=>t,usersRelations:()=>oe,validationTypesEnum:()=>z,validations:()=>re});var C=require("drizzle-orm"),m=require("drizzle-orm/pg-core"),M=require("crypto");var B=require("drizzle-orm"),l=require("drizzle-orm/pg-core"),v=require("crypto");var N=require("drizzle-orm/pg-core"),R=require("crypto"),T=require("drizzle-orm");var D=(0,N.pgEnum)("notification_status",["created","scheduled","sent","failed"]),a=(0,N.pgTable)("notifications",{id:(0,N.text)("id").$defaultFn(R.randomUUID).primaryKey(),userId:(0,N.text)("user_id").notNull().references(()=>t.id),productId:(0,N.text)("product_id").notNull().references(()=>i.id,{onDelete:"cascade"}),notifyAt:(0,N.timestamp)("notify_at",{withTimezone:!0,mode:"string"}).notNull(),status:D("status").notNull().default("created"),createdAt:(0,N.timestamp)("created_at",{withTimezone:!0}).defaultNow(),updatedAt:(0,N.timestamp)("updated_at",{withTimezone:!0}).defaultNow()}),ee=(0,T.relations)(a,({one:n})=>({product:n(i,{fields:[a.productId],references:[i.id]}),user:n(t,{fields:[a.userId],references:[t.id]})}));var i=(0,l.pgTable)("products",{id:(0,l.text)("id").$defaultFn(v.randomUUID).primaryKey(),userId:(0,l.text)("user_id").notNull().references(()=>t.id),name:(0,l.text)("name").notNull(),buyedAt:(0,l.date)("buyed_at",{mode:"string"}).notNull(),expiresAt:(0,l.date)("expires_at",{mode:"string"}).notNull(),category:(0,l.text)("category").notNull(),updatedAt:(0,l.timestamp)("updated_at",{withTimezone:!0,mode:"date"}).notNull().defaultNow(),createdAt:(0,l.timestamp)("created_at",{withTimezone:!0,mode:"date"}).notNull().defaultNow()}),te=(0,B.relations)(i,({one:n,many:u})=>({user:n(t,{fields:[i.userId],references:[t.id]}),notifications:u(a)}));var t=(0,m.pgTable)("users",{id:(0,m.text)("id").$defaultFn(M.randomUUID).primaryKey(),isPhoneVerified:(0,m.boolean)("is_phone_verified").notNull().default(!1),isEmailVerified:(0,m.boolean)("is_email_verified").notNull().default(!1),name:(0,m.text)("name").notNull(),email:(0,m.text)("email").notNull().unique(),phoneNumber:(0,m.text)("phone_number").notNull().unique(),password:(0,m.text)("password").notNull(),avatarUrl:(0,m.text)("avatar_url"),updatedAt:(0,m.timestamp)("updated_at",{withTimezone:!0,mode:"date"}).notNull().defaultNow(),createdAt:(0,m.timestamp)("created_at",{withTimezone:!0,mode:"date"}).notNull().defaultNow(),deletedAt:(0,m.timestamp)("deleted_at",{withTimezone:!0,mode:"date"})}),oe=(0,C.relations)(t,({many:n})=>({products:n(i)}));var I=require("drizzle-orm/pg-core"),z=(0,I.pgEnum)("validation_types",["phone","email"]),re=(0,I.pgTable)("validations",{code:(0,I.text)("code").notNull().primaryKey(),type:z("type").notNull(),identifier:(0,I.text)("identifier").notNull().unique(),usedAt:(0,I.timestamp)("used_at",{withTimezone:!0,mode:"date"}),expiresAt:(0,I.timestamp)("expires_at",{withTimezone:!0,mode:"date"}).notNull(),createdAt:(0,I.timestamp)("created_at",{withTimezone:!0,mode:"date"}).notNull().defaultNow()});var o=(0,O.drizzle)(h.DATABASE_URL,{schema:U,logger:h.NODE_ENV==="development"});var E=()=>({createNotification:async s=>{let[e]=await o.insert(a).values(s).returning();return e},getNotificationById:async s=>{let[e]=await o.select().from(a).where((0,_.eq)(a.id,s));return e},updateNotificationById:async(s,e)=>{let[c]=await o.update(a).set({...e}).where((0,_.eq)(a.id,s)).returning();return c},getPendingNotifications:async()=>{let e=(0,k.format)(new Date,"yyyy-MM-dd");return await o.select().from(a).where((0,_.and)((0,_.eq)(a.status,"created"),(0,_.eq)(a.notifyAt,e))).execute()},scheduleNotification:async s=>{let[e]=await o.update(a).set({status:"scheduled"}).where((0,_.eq)(a.id,s)).returning();return e},markNotificationAsSent:async s=>await o.update(a).set({status:"sent"}).where((0,_.eq)(a.id,s)),markNotificationAsFailed:async s=>await o.update(a).set({status:"failed"}).where((0,_.eq)(a.id,s))});var K=require("@aws-sdk/client-sns");var W=new K.SNSClient({region:h.AWS_SNS_REGION,credentials:{accessKeyId:h.AWS_SNS_ACCESS_KEY_ID,secretAccessKey:h.AWS_SNS_SECRET_ACCESS_KEY}});async function V({phoneNumber:n,message:u,notificationId:p}){let{markNotificationAsSent:w,markNotificationAsFailed:y}=E();try{let d=await W.send(new F.PublishCommand({Message:u,PhoneNumber:n}));await w(p),console.log(`SMS sent successfully for notification ${p}, Message ID: ${d.MessageId}`)}catch(d){console.error(`Failed to send SMS for notification ${p}:`,d),await y(p)}}var S=require("drizzle-orm");var $=()=>({createProduct:async d=>{let[f]=await o.insert(i).values(d).returning().execute();return f},getProductByIdAndUserId:async({id:d,userId:f})=>{let[s]=await o.select().from(i).where((0,S.and)((0,S.eq)(i.id,d),(0,S.eq)(i.userId,f))).execute();return s},getProductsByUserId:async({userId:d})=>{let[f]=await o.select().from(i).where((0,S.eq)(i.userId,d)).execute();return f},updateProductById:async({id:d,userId:f,...s})=>{let[e]=await o.update(i).set(s).where((0,S.and)((0,S.eq)(i.id,d),(0,S.eq)(i.userId,f))).returning().execute();return e},deleteProductById:async({id:d,userId:f})=>await o.delete(i).where((0,S.and)((0,S.eq)(i.id,d),(0,S.eq)(i.userId,f))).execute()});var g=require("drizzle-orm");var Q=()=>({createUser:async e=>{let[c]=await o.insert(t).values(e).returning({id:t.id,name:t.name,email:t.email,avatarUrl:t.avatarUrl,phoneNumber:t.phoneNumber});return c},getUserById:async e=>{let[c]=await o.query.users.findMany({with:{products:!0},columns:{password:!1},where:(0,g.eq)(t.id,e)});return c},getUserByEmail:async e=>{let[c]=await o.select().from(t).where((0,g.eq)(t.email,e));return c},getUserByPhoneNumber:async e=>{let[c]=await o.select().from(t).where((0,g.eq)(t.phoneNumber,e));return c},updateUserById:async({id:e,...c})=>{let[A]=await o.update(t).set(c).where((0,g.eq)(t.id,e)).returning();return A},softDeleteUserById:async e=>await o.update(t).set({deletedAt:new Date}).where((0,g.eq)(t.id,e)).returning(),setUserEmailVerified:async(e,c=o)=>await c.update(t).set({isEmailVerified:!0}).where((0,g.eq)(t.id,e)),setUserPhoneVerified:async e=>await o.update(t).set({isPhoneVerified:!0}).where((0,g.eq)(t.id,e))});var q=require("date-fns"),x=require("zod"),ie=async n=>{let{getNotificationById:u}=E(),{getUserById:p}=Q(),{getProductByIdAndUserId:w}=$();for(let y of n.Records)try{let d=JSON.parse(y.body),f=x.z.object({notificationId:x.z.string()}),{notificationId:s}=f.parse(d),e=await u(s);if(!e){console.error(`Notification not found: ${s}`);continue}let c=await p(e.userId),A=await w({id:e.productId,userId:e.userId});if(!c||!A){console.error(`Missing user or product for notification ${s}`);continue}if(!c.phoneNumber){console.error(`User ${c.id} has no phone number`);continue}let L=(0,q.differenceInCalendarDays)(new Date(A.expiresAt),new Date),Y=`Despensa: Ol\xE1, ${c.name}, seu produto ${A.name} ir\xE1 vencer em ${L} dias!`;await V({phoneNumber:c.phoneNumber,message:Y,notificationId:e.id})}catch(d){console.error("Failed to process SQS message:",d)}};0&&(module.exports={handler});
